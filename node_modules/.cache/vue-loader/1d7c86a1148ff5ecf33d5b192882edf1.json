{"remainingRequest":"/Users/guohan3/VSCodeProjects/erp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/guohan3/VSCodeProjects/erp/src/components/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/guohan3/VSCodeProjects/erp/src/components/login.vue","mtime":1586051625595},{"path":"/Users/guohan3/VSCodeProjects/erp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohan3/VSCodeProjects/erp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/guohan3/VSCodeProjects/erp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohan3/VSCodeProjects/erp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g6L+Z5piv55m75b2V6KGo5Y2V55qE5pWw5o2u57uR5a6a5a+56LGhCiAgICAgIGxvZ2luRm9ybTogewogICAgICAgIHVzZXJuYW1lOiAnJywKICAgICAgICBwYXNzd29yZDogJycKICAgICAgfQoKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOeCueWHu+mHjee9ruaMiemSru+8jOmHjee9rueZu+W9leihqOWNlQogICAgcmVzZXRMb2dpbkZvcm0oKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMpOwogICAgICB0aGlzLiRyZWZzLmxvZ2luRm9ybVJlZi5yZXNldEZpZWxkcygpCiAgICB9LAogICAgbG9naW4oKSB7CiAgICAgIHRoaXMuJHJlZnMubG9naW5Gb3JtUmVmLnZhbGlkYXRlKGFzeW5jIHZhbGlkID0+IHsKICAgICAgICBpZiAoIXZhbGlkKSByZXR1cm4KICAgICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgYXhpb3MucG9zdCgnbG9naW4nLCB0aGlzLmxvZ2luRm9ybSkKICAgICAgICBjb25zb2xlLmxvZyhyZXMpCiAgICAgICAgLy8gdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfnmbvlvZXmiJDlip8nKQogICAgICAgIC8vIDEuIOWwhueZu+W9leaIkOWKn+S5i+WQjueahCB0b2tlbu+8jOS/neWtmOWIsOWuouaIt+err+eahCBzZXNzaW9uU3RvcmFnZSDkuK0KICAgICAgICAvLyAgIDEuMSDpobnnm67kuK3lh7rkuobnmbvlvZXkuYvlpJbnmoTlhbbku5ZBUEnmjqXlj6PvvIzlv4XpobvlnKjnmbvlvZXkuYvlkI7miY3og73orr/pl64KICAgICAgICAvLyAgIDEuMiB0b2tlbiDlj6rlupTlnKjlvZPliY3nvZHnq5nmiZPlvIDmnJ/pl7TnlJ/mlYjvvIzmiYDku6XlsIYgdG9rZW4g5L+d5a2Y5ZyoIHNlc3Npb25TdG9yYWdlIOS4rQogICAgICAgIC8vIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIHJlcy5kYXRhLnRva2VuKQogICAgICAgIC8vIDIuIOmAmui/h+e8lueoi+W8j+WvvOiIqui3s+i9rOWIsOWQjuWPsOS4u+mhte+8jOi3r+eUseWcsOWdgOaYryAvaG9tZQogICAgICAgIC8vIHRoaXMuJHJvdXRlci5wdXNoKCcvaG9tZScpCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"login_container\">\n    <div class=\"login_box\">\n      <!-- 头像区域 -->\n      <div class=\"avatar_box\">\n        <img src=\"../assets/furui.jpg\" alt=\"\">\n      </div>\n      <!-- 登录表单区域 -->\n      <el-form ref=\"loginFormRef\" :model=\"loginForm\" label-width=\"0px\" class=\"login_form\">\n        <!-- 用户名 -->\n        <el-form-item prop=\"username\">\n          <el-input placeholder=\"请输入用户名\" v-model=\"loginForm.username\" prefix-icon=\"iconfont icon-user\"></el-input>\n        </el-form-item>\n        <!-- 密码 -->\n        <el-form-item prop=\"password\">\n          <el-input placeholder=\"请输入密码\" v-model=\"loginForm.password\" prefix-icon=\"iconfont icon-3702mima\" type=\"password\"></el-input>\n        </el-form-item>\n        <!-- 按钮区域 -->\n        <el-form-item class=\"btns\">\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\n          <el-button type=\"info\" @click=\"resetLoginForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // 这是登录表单的数据绑定对象\n      loginForm: {\n        username: '',\n        password: ''\n      }\n\n    }\n  },\n  methods: {\n    // 点击重置按钮，重置登录表单\n    resetLoginForm() {\n      // console.log(this);\n      this.$refs.loginFormRef.resetFields()\n    },\n    login() {\n      this.$refs.loginFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await axios.post('login', this.loginForm)\n        console.log(res)\n        // this.$message.success('登录成功')\n        // 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\n        //   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\n        //   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\n        // window.sessionStorage.setItem('token', res.data.token)\n        // 2. 通过编程式导航跳转到后台主页，路由地址是 /home\n        // this.$router.push('/home')\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.login_container {\n  background-color: #2b4b6b;\n  height: 100%;\n}\n\n.login_box {\n  width: 450px;\n  height: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  .avatar_box {\n    height: 130px;\n    width: 130px;\n    border: 1px solid #eee;\n    border-radius: 50%;\n    padding: 10px;\n    box-shadow: 0 0 10px #ddd;\n    position: absolute;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: #fff;\n    img {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: #eee;\n    }\n  }\n}\n\n.login_form {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 0 20px;\n  box-sizing: border-box;\n}\n\n.btns {\n  display: flex;\n  justify-content: flex-end;\n}\n</style>\n"]}]}